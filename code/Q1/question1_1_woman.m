% Nutrient content per 100g
nutrient_content_per_100g = struct( ...
    'Soy_Milk_Soybean', struct('Carbohydrates', 11.1, 'Protein', 35.1, 'Fat', 18.4), ...
    'Chicken_Noodle_Wheat_Flour', struct('Carbohydrates', 70.0, 'Protein', 10.5, 'Fat', 1.8), ...
    'Chicken_Noodle_Chicken_Meat', struct('Carbohydrates', 0.0, 'Protein', 23.0, 'Fat', 6.0), ...
    'Chicken_Noodle_Soybean_Oil', struct('Carbohydrates', 0.0, 'Protein', 0.0, 'Fat', 99.9), ...
    'Egg_Cake_Wheat_Flour', struct('Carbohydrates', 70.0, 'Protein', 10.5, 'Fat', 1.8), ...
    'Egg_Cake_Egg', struct('Carbohydrates', 2.5, 'Protein', 13.1, 'Fat', 10.6), ...
    'Egg_Cake_Sausage', struct('Carbohydrates', 9.0, 'Protein', 14.0, 'Fat', 26.0), ...
    'Egg_Cake_Soybean_Oil', struct('Carbohydrates', 0.0, 'Protein', 0.0, 'Fat', 99.9), ...
    'Dumpling_Wheat_Flour', struct('Carbohydrates', 70.0, 'Protein', 10.5, 'Fat', 1.8), ...
    'Dumpling_Pork', struct('Carbohydrates', 0.0, 'Protein', 20.6, 'Fat', 39.8), ...
    'Dumpling_Cabbage', struct('Carbohydrates', 3.6, 'Protein', 1.5, 'Fat', 0.2), ...
    'Dumpling_Soybean_Oil', struct('Carbohydrates', 0.0, 'Protein', 0.0, 'Fat', 99.9), ...
    'Grape', struct('Carbohydrates', 18.0, 'Protein', 0.5, 'Fat', 0.3), ...
    'Rice_Rice', struct('Carbohydrates', 77.2, 'Protein', 7.4, 'Fat', 0.6), ...
    'Stir_fried_Kale_Kale', struct('Carbohydrates', 3.8, 'Protein', 2.0, 'Fat', 0.4), ...
    'Stir_fried_Kale_Mushroom', struct('Carbohydrates', 5.0, 'Protein', 2.2, 'Fat', 0.3), ...
    'Stir_fried_Kale_Soybean_Oil', struct('Carbohydrates', 0.0, 'Protein', 0.0, 'Fat', 99.9), ...
    'Stir_fried_Meat_with_Garlic_Stir_fried_Garlic', struct('Carbohydrates', 5.4, 'Protein', 2.0, 'Fat', 0.2), ...
    'Stir_fried_Meat_with_Garlic_Pork', struct('Carbohydrates', 0.0, 'Protein', 20.6, 'Fat', 39.8), ...
    'Stir_fried_Meat_with_Garlic_Soybean_Oil', struct('Carbohydrates', 0.0, 'Protein', 0.0, 'Fat', 99.9), ...
    'Sardine_in_Tomato_Sauce', struct('Carbohydrates', 0.0, 'Protein', 22.0, 'Fat', 12.0), ...
    'Apple', struct('Carbohydrates', 25.0, 'Protein', 0.3, 'Fat', 0.2) ...
);

% Recipe
recipe = struct( ...
    'Breakfast', struct( ...
        'Soy_Milk_Soybean', [10, 1], ...
        'Chicken_Noodle_Wheat_Flour', [50, 1], ...
        'Chicken_Noodle_Chicken_Meat', [40, 1], ...
        'Chicken_Noodle_Soybean_Oil', [5, 1] ...
    ), ...
    'Lunch', struct( ...
        'Egg_Cake_Wheat_Flour', [25, 1], ...
        'Egg_Cake_Egg', [20, 1], ...
        'Egg_Cake_Sausage', [20, 1], ...
        'Egg_Cake_Soybean_Oil', [5, 1], ...
        'Dumpling_Wheat_Flour', [50, 1], ...
        'Dumpling_Pork', [20, 1], ...
        'Dumpling_Cabbage', [40, 1], ...
        'Dumpling_Soybean_Oil', [10, 1], ...
        'Grape', [100, 1] ...
    ), ...
    'Dinner', struct( ...
        'Rice_Rice', [25 * 2, 2], ...
        'Stir_fried_Kale_Kale', [100, 0.5], ...
        'Stir_fried_Kale_Mushroom', [20, 0.5], ...
        'Stir_fried_Kale_Soybean_Oil', [5, 0.5], ...
        'Stir_fried_Meat_with_Garlic_Stir_fried_Garlic', [100, 0.5], ...
        'Stir_fried_Meat_with_Garlic_Pork', [30, 0.5], ...
        'Stir_fried_Meat_with_Garlic_Soybean_Oil', [5, 0.5], ...
        'Sardine_in_Tomato_Sauce', [100, 0.5], ...
        'Apple', [100, 1] ... 
    ) ...
);

total_energy = 0;
energy_from_protein = 0;
energy_from_fat = 0;
energy_from_carbs = 0;

energy_breakfast = 0;
energy_lunch = 0;
energy_dinner = 0;

meals = fieldnames(recipe);

for i = 1:numel(meals)
    meal = meals{i};
    foods = recipe.(meal);
    food_names = fieldnames(foods);
    meal_energy = 0;
    
    for j = 1:numel(food_names)
        food = food_names{j};
        amount = foods.(food)(1);
        servings = foods.(food)(2);
        total_amount = amount * servings;

        nutrients = fieldnames(nutrient_content_per_100g.(food));
        for k = 1:numel(nutrients)
            nutrient = nutrients{k};
            content_per_100g = nutrient_content_per_100g.(food).(nutrient);
            nutrient_total = (content_per_100g / 100) * total_amount;
            
            if strcmp(nutrient, 'Protein')
                energy_from_protein = energy_from_protein + nutrient_total * 4;
            elseif strcmp(nutrient, 'Fat')
                energy_from_fat = energy_from_fat + nutrient_total * 9;
            elseif strcmp(nutrient, 'Carbohydrate')
                energy_from_carbs = energy_from_carbs + nutrient_total * 4;
            end
            
            if ismember(nutrient, {'Protein', 'Carbohydrate'})
                meal_energy = meal_energy + nutrient_total * 4;
            elseif strcmp(nutrient, 'Fat')
                meal_energy = meal_energy + nutrient_total * 9;
            end
        end
    end
    
    if strcmp(meal, 'Breakfast')
        energy_breakfast = meal_energy;
    elseif strcmp(meal, 'Lunch')
        energy_lunch = meal_energy;
    elseif strcmp(meal, 'Dinner')
        energy_dinner = meal_energy;
    end
end

total_energy = energy_from_protein + energy_from_fat + energy_from_carbs;

fprintf('Total Protein Intake: %.2f grams\n', energy_from_protein / 4);
fprintf('Total Fat Intake: %.2f grams\n', energy_from_fat / 9);
fprintf('Total Carbohydrates Intake: %.2f grams\n', energy_from_carbs / 4);

fprintf('Protein Percentage of Total Energy: %.2f%%\n', (energy_from_protein / total_energy) * 100);
fprintf('Fat Percentage of Total Energy: %.2f%%\n', (energy_from_fat / total_energy) * 100);
fprintf('Carbohydrates Percentage of Total Energy: %.2f%%\n', (energy_from_carbs / total_energy) * 100);

ideal_protein_percent = 12.5;
ideal_fat_percent = 25;
ideal_carbs_percent = 62.5;

fprintf('Protein Percentage Difference from Ideal: %.2f%%\n', ((energy_from_protein / total_energy) * 100) - ideal_protein_percent);
fprintf('Fat Percentage Difference from Ideal: %.2f%%\n', ((energy_from_fat / total_energy) * 100) - ideal_fat_percent);
fprintf('Carbohydrates Percentage Difference from Ideal: %.2f%%\n', ((energy_from_carbs / total_energy) * 100) - ideal_carbs_percent);

total_meal_energy = energy_breakfast + energy_lunch + energy_dinner;
fprintf('Breakfast Meal Ratio: %.2f%%\n', (energy_breakfast / total_meal_energy) * 100);
fprintf('Lunch Meal Ratio: %.2f%%\n', (energy_lunch / total_meal_energy) * 100);
fprintf('Dinner Meal Ratio: %.2f%%\n', (energy_dinner / total_meal_energy) * 100);

ideal_breakfast_percent = 30;
ideal_lunch_percent = 35;
ideal_dinner_percent = 35;

fprintf('Breakfast Meal Ratio Difference from Ideal: %.2f%%\n', ((energy_breakfast / total_meal_energy) * 100) - ideal_breakfast_percent);
fprintf('Lunch Meal Ratio Difference from Ideal: %.2f%%\n', ((energy_lunch / total_meal_energy) * 100) - ideal_lunch_percent);
fprintf('Dinner Meal Ratio Difference from Ideal: %.2f%%\n', ((energy_dinner / total_meal_energy) * 100) - ideal_dinner_percent);

% Plotting
figure;
categories = {'Protein', 'Fat', 'Carbohydrates'};
values = [(energy_from_protein / total_energy) * 100, (energy_from_fat / total_energy) * 100, (energy_from_carbs / total_energy) * 100];
ideal_values = [ideal_protein_percent, ideal_fat_percent, ideal_carbs_percent];

bar(categories, values, 'FaceColor', 'flat');
hold on;
plot(1:3, ideal_values, 'r--', 'LineWidth', 2);
hold off;

title('Energy Nutrient Proportion');
xlabel('Nutrient');
ylabel('Percentage');
legend({'Actual', 'Ideal'}, 'Location', 'northwest');
ylim([0 100]);

figure;
labels = {'Breakfast', 'Lunch', 'Dinner'};
sizes = [(energy_breakfast / total_meal_energy) * 100, (energy_lunch / total_meal_energy) * 100, (energy_dinner / total_meal_energy) * 100];

pie(sizes, labels);
title('Meal Proportion');
legend(labels, 'Location', 'southoutside', 'Orientation', 'horizontal');