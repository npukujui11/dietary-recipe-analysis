nutrient_content_per_100g = struct( ...
    'XiaomiPorridge_Millet', struct('Carbohydrate', 73.5, 'Protein', 9.0, 'Fat', 1.6), ...
    'Youtiao_WheatFlour', struct('Carbohydrate', 70.0, 'Protein', 10.5, 'Fat', 1.8), ...
    'Youtiao_SoybeanOil', struct('Fat', 99.9, 'Carbohydrate', 0.0, 'Protein', 0.0), ...
    'FriedEgg_Egg', struct('Carbohydrate', 2.5, 'Protein', 13.1, 'Fat', 10.6), ...
    'FriedEgg_SoybeanOil', struct('Fat', 99.9, 'Carbohydrate', 0.0, 'Protein', 0.0), ...
    'SeaweedSalad_Seaweed', struct('Carbohydrate', 10.6, 'Protein', 1.2, 'Fat', 0.1), ...
    'SeaweedSalad_SesameOil', struct('Fat', 99.7, 'Carbohydrate', 0.0, 'Protein', 0.0), ...
    'Rice_Rice', struct('Carbohydrate', 77.2, 'Protein', 7.4, 'Fat', 0.6), ...
    'BlackFungusSalad_BlackFungus', struct('Carbohydrate', 6.0, 'Protein', 1.5, 'Fat', 0.2), ...
    'BlackFungusSalad_SesameOil', struct('Fat', 99.7, 'Carbohydrate', 0.0, 'Protein', 0.0), ...
    'DiSanXian_Eggplant', struct('Carbohydrate', 5.0, 'Protein', 1.0, 'Fat', 0.2), ...
    'DiSanXian_Potato', struct('Carbohydrate', 18.4, 'Protein', 2.0, 'Fat', 0.2), ...
    'DiSanXian_GreenPepper', struct('Carbohydrate', 5.4, 'Protein', 1.4, 'Fat', 0.3), ...
    'DiSanXian_SoybeanOil', struct('Fat', 99.9, 'Carbohydrate', 0.0, 'Protein', 0.0), ...
    'BraisedPorkBelly_PorkBelly', struct('Carbohydrate', 0.0, 'Protein', 20.6, 'Fat', 39.8), ...
    'BraisedPorkBelly_DriedTofu', struct('Carbohydrate', 10.0, 'Protein', 44.6, 'Fat', 18.0), ...
    'BraisedPorkBelly_SoybeanOil', struct('Fat', 99.9, 'Carbohydrate', 0.0, 'Protein', 0.0), ...
    'HotPotNoodles_CornFlour', struct('Carbohydrate', 74.0, 'Protein', 8.5, 'Fat', 1.5), ...
    'HotPotNoodles_Cabbage', struct('Carbohydrate', 3.6, 'Protein', 1.5, 'Fat', 0.2), ...
    'HotPotNoodles_BokChoy', struct('Carbohydrate', 3.8, 'Protein', 1.8, 'Fat', 0.4), ...
    'HotPotNoodles_DriedTofu', struct('Carbohydrate', 10.0, 'Protein', 44.6, 'Fat', 18.0), ...
    'HotPotNoodles_SoybeanOil', struct('Fat', 99.9, 'Carbohydrate', 0.0, 'Protein', 0.0), ...
    'Baozi_WheatFlour', struct('Carbohydrate', 70.0, 'Protein', 10.5, 'Fat', 1.8), ...
    'Baozi_Pork', struct('Carbohydrate', 0.0, 'Protein', 20.6, 'Fat', 39.8), ...
    'Baozi_Sauerkraut', struct('Carbohydrate', 5.0, 'Protein', 1.1, 'Fat', 0.2), ...
    'Baozi_SoybeanOil', struct('Fat', 99.9, 'Carbohydrate', 0.0, 'Protein', 0.0), ...
    'FriedChicken', struct('Carbohydrate', 0.0, 'Protein', 25.0, 'Fat', 20.0) ...
);

recipe = struct( ...
    'Breakfast', struct( ...
        'XiaomiPorridge_Millet', [15, 1], ...
        'Youtiao_WheatFlour', [50*2, 2], ...
        'Youtiao_SoybeanOil', [10*2, 2], ...
        'FriedEgg_Egg', [50, 1], ...
        'FriedEgg_SoybeanOil', [10, 1], ...
        'SeaweedSalad_Seaweed', [100, 1], ...
        'SeaweedSalad_SesameOil', [2, 1] ...
    ), ...
    'Lunch', struct( ...
        'Rice_Rice', [25*4, 4], ...
        'BlackFungusSalad_BlackFungus', [100, 1], ...
        'BlackFungusSalad_SesameOil', [2, 1], ...
        'DiSanXian_Eggplant', [80, 1], ...
        'DiSanXian_Potato', [80, 1], ...
        'DiSanXian_GreenPepper', [10, 1], ...
        'DiSanXian_SoybeanOil', [10, 1], ...
        'BraisedPorkBelly_PorkBelly', [50, 1], ...
        'BraisedPorkBelly_DriedTofu', [50, 1], ...
        'BraisedPorkBelly_SoybeanOil', [10, 1] ...
    ), ...
    'Dinner', struct( ...
        'HotPotNoodles_CornFlour', [80, 1], ...
        'HotPotNoodles_Cabbage', [20, 1], ...
        'HotPotNoodles_BokChoy', [20, 1], ...
        'HotPotNoodles_DriedTofu', [10, 1], ...
        'HotPotNoodles_SoybeanOil', [10, 1], ...
        'Baozi_WheatFlour', [25, 1], ...
        'Baozi_Pork', [15, 1], ...
        'Baozi_Sauerkraut', [20, 1], ...
        'Baozi_SoybeanOil', [5, 1], ...
        'FriedChicken', [100, 1] ...
    ) ...
);

total_energy = 0;
energy_from_protein = 0;
energy_from_fat = 0;
energy_from_carbs = 0;

energy_breakfast = 0;
energy_lunch = 0;
energy_dinner = 0;

meals = fieldnames(recipe);

for i = 1:numel(meals)
    meal = meals{i};
    foods = recipe.(meal);
    food_names = fieldnames(foods);
    meal_energy = 0;
    
    for j = 1:numel(food_names)
        food = food_names{j};
        amount = foods.(food)(1);
        servings = foods.(food)(2);
        total_amount = amount * servings;

        nutrients = fieldnames(nutrient_content_per_100g.(food));
        for k = 1:numel(nutrients)
            nutrient = nutrients{k};
            content_per_100g = nutrient_content_per_100g.(food).(nutrient);
            nutrient_total = (content_per_100g / 100) * total_amount;
            
            if strcmp(nutrient, 'Protein')
                energy_from_protein = energy_from_protein + nutrient_total * 4;
            elseif strcmp(nutrient, 'Fat')
                energy_from_fat = energy_from_fat + nutrient_total * 9;
            elseif strcmp(nutrient, 'Carbohydrate')
                energy_from_carbs = energy_from_carbs + nutrient_total * 4;
            end
            
            if ismember(nutrient, {'Protein', 'Carbohydrate'})
                meal_energy = meal_energy + nutrient_total * 4;
            elseif strcmp(nutrient, 'Fat')
                meal_energy = meal_energy + nutrient_total * 9;
            end
        end
    end
    
    if strcmp(meal, 'Breakfast')
        energy_breakfast = meal_energy;
    elseif strcmp(meal, 'Lunch')
        energy_lunch = meal_energy;
    elseif strcmp(meal, 'Dinner')
        energy_dinner = meal_energy;
    end
end

total_energy = energy_from_protein + energy_from_fat + energy_from_carbs;

% 输出结果
fprintf('蛋白质总摄入量: %.2f克\n', energy_from_protein / 4);
fprintf('脂肪总摄入量: %.2f克\n', energy_from_fat / 9);
fprintf('碳水化合物总摄入量: %.2f克\n', energy_from_carbs / 4);

fprintf('蛋白质占总能量百分比: %.2f%%\n', (energy_from_protein / total_energy) * 100);
fprintf('脂肪占总能量百分比: %.2f%%\n', (energy_from_fat / total_energy) * 100);
fprintf('碳水化合物占总能量百分比: %.2f%%\n', (energy_from_carbs / total_energy) * 100);

ideal_protein_percent = 12.5;
ideal_fat_percent = 25;
ideal_carbs_percent = 62.5;

fprintf('蛋白质占比与理想差距: %.2f%%\n', (energy_from_protein / total_energy) * 100 - ideal_protein_percent);
fprintf('脂肪占比与理想差距: %.2f%%\n', (energy_from_fat / total_energy) * 100 - ideal_fat_percent);
fprintf('碳水化合物占比与理想差距: %.2f%%\n', (energy_from_carbs / total_energy) * 100 - ideal_carbs_percent);

total_meal_energy = energy_breakfast + energy_lunch + energy_dinner;
fprintf('早餐餐次比: %.2f%%\n', (energy_breakfast / total_meal_energy) * 100);
fprintf('午餐餐次比: %.2f%%\n', (energy_lunch / total_meal_energy) * 100);
fprintf('晚餐餐次比: %.2f%%\n', (energy_dinner / total_meal_energy) * 100);

ideal_breakfast_percent = 30;
ideal_lunch_percent = 35;
ideal_dinner_percent = 35;

fprintf('早餐餐次比与理想差距: %.2f%%\n', (energy_breakfast / total_meal_energy) * 100 - ideal_breakfast_percent);
fprintf('午餐餐次比与理想差距: %.2f%%\n', (energy_lunch / total_meal_energy) * 100 - ideal_lunch_percent);
fprintf('晚餐餐次比与理想差距: %.2f%%\n', (energy_dinner / total_meal_energy) * 100 - ideal_dinner_percent);

% 绘制营养成分占比图
figure;
categories = categorical({'蛋白质', '脂肪', '碳水化合物'});
values = [(energy_from_protein / total_energy) * 100, (energy_from_fat / total_energy) * 100, (energy_from_carbs / total_energy) * 100];
ideal_values = [ideal_protein_percent, ideal_fat_percent, ideal_carbs_percent];

bar(categories, values, 'FaceColor', 'flat');
hold on;
plot(1:3, ideal_values, 'r--', 'LineWidth', 2);
hold off;

title('Energy Nutrient Proportion');
xlabel('Nutrient');
ylabel('Percentage');
legend({'Actual', 'Ideal'}, 'Location', 'northwest');
ylim([0 100]);

% 绘制餐次比例图
figure;
labels = {'早餐', '午餐', '晚餐'};
sizes = [(energy_breakfast / total_meal_energy) * 100, (energy_lunch / total_meal_energy) * 100, (energy_dinner / total_meal_energy) * 100];

pie(sizes, labels);
title('Meal Proportion');
legend(labels, 'Location', 'southoutside', 'Orientation', 'horizontal');
